{"version":3,"file":"next-s3-upload.cjs.development.js","sources":["../src/utils/config.ts","../src/utils/client.ts","../src/utils/keys.ts","../src/pages/api/s3-upload.ts","../src/components/file-input.tsx","../src/hooks/use-upload-files.tsx","../src/hooks/use-uploader.ts","../src/hooks/use-s3-upload.tsx","../src/hooks/use-presigned-upload.ts","../src/utils/image-data.ts","../src/utils/private-files.ts"],"sourcesContent":["export type S3Config = {\n  accessKeyId?: string;\n  secretAccessKey?: string;\n  bucket?: string;\n  region?: string;\n  endpoint?: string;\n  forcePathStyle?: boolean;\n};\n\nexport function getConfig(s3Config?: S3Config) {\n  return {\n    accessKeyId: s3Config?.accessKeyId ?? `${process.env.S3_UPLOAD_KEY}`,\n    secretAccessKey:\n      s3Config?.secretAccessKey ?? `${process.env.S3_UPLOAD_SECRET}`,\n    bucket: s3Config?.bucket ?? `${process.env.S3_UPLOAD_BUCKET}`,\n    region: s3Config?.region ?? `${process.env.S3_UPLOAD_REGION}`,\n    endpoint: s3Config?.endpoint,\n    forcePathStyle: s3Config?.forcePathStyle,\n  };\n}\n","import { S3Client } from '@aws-sdk/client-s3';\nimport { getConfig, S3Config } from './config';\n\nexport function getClient(s3Config?: S3Config) {\n  let config = getConfig(s3Config);\n\n  let client = new S3Client({\n    credentials: {\n      accessKeyId: config.accessKeyId,\n      secretAccessKey: config.secretAccessKey,\n    },\n    region: config.region,\n    ...(config.forcePathStyle ? { forcePathStyle: config.forcePathStyle } : {}),\n    ...(config.endpoint ? { endpoint: config.endpoint } : {}),\n  });\n\n  return client;\n}\n","import { v4 as uuidv4 } from 'uuid';\n\nexport const uuid = () => uuidv4();\n\nconst SAFE_CHARACTERS = /[^0-9a-zA-Z!_\\\\.\\\\*'\\\\(\\\\)\\\\\\-/]/g;\nexport const sanitizeKey = (value: string) =>\n  value.replace(SAFE_CHARACTERS, ' ').replace(/\\s+/g, '-');\n","import { NextApiRequest, NextApiResponse } from 'next';\nimport {\n  STSClient,\n  GetFederationTokenCommand,\n  STSClientConfig,\n} from '@aws-sdk/client-sts';\nimport { PutObjectCommand } from '@aws-sdk/client-s3';\nimport { getSignedUrl } from '@aws-sdk/s3-request-presigner';\nimport { getConfig, S3Config } from '../../utils/config';\nimport { getClient } from '../../utils/client';\nimport { sanitizeKey, uuid } from '../../utils/keys';\n\ntype NextRouteHandler = (\n  req: NextApiRequest,\n  res: NextApiResponse\n) => Promise<void>;\n\ntype Configure = (options: Options) => Handler;\ntype Handler = NextRouteHandler & { configure: Configure };\n\ntype Options = S3Config & {\n  key?: (req: NextApiRequest, filename: string) => string | Promise<string>;\n};\n\nlet makeRouteHandler = (options: Options = {}): Handler => {\n  let route: NextRouteHandler = async function(req, res) {\n    let config = getConfig({\n      accessKeyId: options.accessKeyId,\n      secretAccessKey: options.secretAccessKey,\n      bucket: options.bucket,\n      region: options.region,\n      forcePathStyle: options.forcePathStyle,\n      endpoint: options.endpoint,\n    });\n\n    let missing = missingEnvs(config);\n    if (missing.length > 0) {\n      res\n        .status(500)\n        .json({ error: `Next S3 Upload: Missing ENVs ${missing.join(', ')}` });\n    } else {\n      let uploadType = req.body._nextS3?.strategy;\n      let filename = req.body.filename;\n\n      let key = options.key\n        ? await Promise.resolve(options.key(req, filename))\n        : `next-s3-uploads/${uuid()}/${sanitizeKey(filename)}`;\n      let { bucket, region, endpoint } = config;\n\n      if (uploadType === 'presigned') {\n        let filetype = req.body.filetype;\n        let client = getClient(config);\n        let params = {\n          Bucket: bucket,\n          Key: key,\n          ContentType: filetype,\n          CacheControl: 'max-age=630720000',\n        };\n\n        const url = await getSignedUrl(client, new PutObjectCommand(params), {\n          expiresIn: 60 * 60,\n        });\n\n        res.status(200).json({\n          key,\n          bucket,\n          region,\n          endpoint,\n          url,\n        });\n      } else {\n        let stsConfig: STSClientConfig = {\n          credentials: {\n            accessKeyId: config.accessKeyId,\n            secretAccessKey: config.secretAccessKey,\n          },\n          region,\n        };\n\n        let policy = {\n          Statement: [\n            {\n              Sid: 'Stmt1S3UploadAssets',\n              Effect: 'Allow',\n              Action: ['s3:PutObject'],\n              Resource: [`arn:aws:s3:::${bucket}/${key}`],\n            },\n          ],\n        };\n\n        let sts = new STSClient(stsConfig);\n\n        let command = new GetFederationTokenCommand({\n          Name: 'S3UploadWebToken',\n          Policy: JSON.stringify(policy),\n          DurationSeconds: 60 * 60, // 1 hour\n        });\n\n        let token = await sts.send(command);\n\n        res.status(200).json({\n          token,\n          key,\n          bucket,\n          region,\n        });\n      }\n    }\n  };\n\n  let configure = (options: Options) => makeRouteHandler(options);\n\n  return Object.assign(route, { configure });\n};\n\nlet missingEnvs = (config: Record<string, any>): string[] => {\n  let required = ['accessKeyId', 'secretAccessKey', 'bucket', 'region'];\n\n  return required.filter(key => !config[key] || config.key === '');\n};\n\nlet APIRoute = makeRouteHandler();\n\nexport { APIRoute };\n","import React, { ChangeEvent, InputHTMLAttributes } from 'react';\nimport { forwardRef } from 'react';\n\ntype FileInputProps = {\n  onChange: (\n    file: File | undefined,\n    event: ChangeEvent<HTMLInputElement>\n  ) => void;\n} & InputHTMLAttributes<HTMLInputElement>;\n\nexport const FileInput = forwardRef<HTMLInputElement, FileInputProps>(\n  ({ onChange = () => {}, ...restOfProps }, forwardedRef) => {\n    let handleChange = (event: ChangeEvent<HTMLInputElement>): void => {\n      let file = event.target?.files?.[0];\n      onChange(file, event);\n    };\n\n    return (\n      <input\n        onChange={handleChange}\n        {...restOfProps}\n        ref={forwardedRef}\n        type=\"file\"\n      />\n    );\n  }\n);\n","import React from 'react';\nimport { FileInput } from '../components/file-input';\nimport { useRef, useState } from 'react';\n\ntype TrackedFile = {\n  file: File;\n  progress: number;\n  uploaded: number;\n  size: number;\n};\n\nexport const useUploadFiles = () => {\n  let ref = useRef<HTMLInputElement>();\n  let [files, setFiles] = useState<TrackedFile[]>([]);\n\n  let openFileDialog = () => {\n    if (ref.current) {\n      ref.current.value = '';\n      ref.current?.click();\n    }\n  };\n\n  let resetFiles = () => {\n    setFiles([]);\n  };\n\n  let updateFileProgress = (file: File, uploaded: number) => {\n    setFiles(files =>\n      files.map(trackedFile =>\n        trackedFile.file === file\n          ? {\n              file,\n              uploaded,\n              size: file.size,\n              progress: file.size ? (uploaded / file.size) * 100 : 0,\n            }\n          : trackedFile\n      )\n    );\n  };\n\n  let addFile = (file: File) => {\n    setFiles(files => [\n      ...files,\n      { file, progress: 0, uploaded: 0, size: file.size },\n    ]);\n  };\n\n  return {\n    FileInput: (props: any) => (\n      <FileInput {...props} ref={ref} style={{ display: 'none' }} />\n    ),\n    openFileDialog,\n    files,\n    addFile,\n    updateFileProgress,\n    resetFiles,\n  };\n};\n","import { useUploadFiles } from './use-upload-files';\n\ntype UploadResult = {\n  url: string;\n  bucket: string;\n  key: string;\n};\n\ntype RequestOptions = {\n  url?: string;\n  body?: Record<string, any>;\n  headers?: HeadersInit;\n};\n\ntype UploadToS3Options = {\n  endpoint?: {\n    request: RequestOptions;\n  };\n};\n\n// Outdated options we no longer want support.\ntype OldOptions = {\n  endpoint: string;\n};\n\ntype Strategy = 'presigned' | 'aws-sdk';\n\nexport type Uploader<P = any> = (\n  file: File,\n  params: P,\n  eventHandlers: {\n    onProgress: (uploaded: number) => void;\n  }\n) => Promise<UploadResult>;\n\nexport const useUploader = (\n  strategy: Strategy,\n  uploader: Uploader,\n  oldOptions?: OldOptions\n) => {\n  let {\n    addFile,\n    updateFileProgress,\n    FileInput,\n    openFileDialog,\n    files,\n    resetFiles,\n  } = useUploadFiles();\n\n  let uploadToS3 = async (file: File, options: UploadToS3Options = {}) => {\n    // combine old options and new options. remove after 1.0\n    if (oldOptions?.endpoint) {\n      if (process.env.NODE_ENV === 'development') {\n        console.warn(\n          '[Next S3 Upload] The `endpoint` option has been replaced by `endpoint.request.url`. For more information see: https://next-s3-upload.codingvalue.com/changes/endpoint'\n        );\n      }\n\n      if (options.endpoint) {\n        options.endpoint.request.url = oldOptions.endpoint;\n      } else {\n        options.endpoint = {\n          request: {\n            url: oldOptions.endpoint,\n          },\n        };\n      }\n    }\n\n    let params = await getUploadParams(\n      strategy,\n      file,\n      options.endpoint?.request\n    );\n\n    if (params.error) {\n      console.error(params.error);\n      throw params.error;\n    }\n\n    addFile(file);\n\n    let result = await uploader(file, params, {\n      onProgress: uploaded => updateFileProgress(file, uploaded),\n    });\n\n    return result;\n  };\n\n  return {\n    FileInput,\n    openFileDialog,\n    uploadToS3,\n    files,\n    resetFiles,\n  };\n};\n\nlet getUploadParams = async (\n  strategy: Strategy,\n  file: File,\n  requestOptions?: RequestOptions\n) => {\n  let additionalBody = requestOptions?.body ?? {};\n  let additionalHeaders = requestOptions?.headers ?? {};\n  let apiRouteUrl = requestOptions?.url ?? '/api/s3-upload';\n\n  let body = {\n    filename: file.name,\n    filetype: file.type,\n    _nextS3: {\n      strategy,\n    },\n    ...additionalBody,\n  };\n\n  let headers = {\n    ...additionalHeaders,\n    'Content-Type': 'application/json',\n  };\n\n  let res = await fetch(apiRouteUrl, {\n    method: 'POST',\n    headers,\n    body: JSON.stringify(body),\n  });\n\n  return await res.json();\n};\n","import {\n  CompleteMultipartUploadCommandOutput,\n  S3Client,\n} from '@aws-sdk/client-s3';\nimport { Upload } from '@aws-sdk/lib-storage';\nimport { Uploader, useUploader } from './use-uploader';\n\ntype Params = {\n  key: string;\n  bucket: string;\n  token: Record<string, any>;\n  region: string;\n};\n\nlet upload: Uploader<Params> = async (file, params, { onProgress }) => {\n  let { key, bucket, token, region } = params;\n\n  let client = new S3Client({\n    credentials: {\n      accessKeyId: token.Credentials.AccessKeyId,\n      secretAccessKey: token.Credentials.SecretAccessKey,\n      sessionToken: token.Credentials.SessionToken,\n    },\n    region: region,\n  });\n\n  let uploadParams = {\n    Bucket: bucket,\n    Key: key,\n    Body: file,\n    CacheControl: 'max-age=630720000, public',\n    ContentType: file.type,\n  };\n\n  // at some point make this configurable\n  // let uploadOptions = {\n  //   partSize: 100 * 1024 * 1024,\n  //   queueSize: 1,\n  // };\n\n  let s3Upload = new Upload({\n    client,\n    params: uploadParams,\n  });\n\n  s3Upload.on('httpUploadProgress', progress => {\n    let uploaded = progress.loaded ?? 0;\n    onProgress(uploaded);\n  });\n\n  let uploadResult = (await s3Upload.done()) as CompleteMultipartUploadCommandOutput;\n\n  let url =\n    uploadResult.Bucket && uploadResult.Key\n      ? `https://${uploadResult.Bucket}.s3.${region}.amazonaws.com/${uploadResult.Key}`\n      : '';\n\n  return {\n    url,\n    bucket: uploadResult.Bucket ?? '',\n    key: uploadResult.Key ?? '',\n  };\n};\n\nexport const useS3Upload = (options?: { endpoint: string }) => {\n  let hook = useUploader('aws-sdk', upload, options);\n  return hook;\n};\n","import { Uploader, useUploader } from './use-uploader';\n\nlet upload: Uploader = async (file, params, { onProgress }) => {\n  let { url, key, bucket, region, endpoint } = params;\n  let buffer = await file.arrayBuffer();\n\n  await new Promise<void>((resolve, reject) => {\n    let xhr = new XMLHttpRequest();\n\n    xhr.upload.onprogress = (event: ProgressEvent) => {\n      onProgress(event.loaded);\n    };\n\n    xhr.open('PUT', url, true);\n    xhr.setRequestHeader('Content-Type', file.type);\n    xhr.setRequestHeader('Cache-Control', 'max-age=630720000');\n\n    xhr.onreadystatechange = function() {\n      if (xhr.readyState === 4) {\n        if (xhr.status >= 200 && xhr.status < 300) {\n          resolve();\n        } else {\n          reject();\n        }\n      }\n    };\n\n    xhr.send(buffer);\n  });\n\n  let resultUrl = endpoint\n    ? `${endpoint}/${bucket}/${key}`\n    : `https://${bucket}.s3.${region}.amazonaws.com/${key}`;\n\n  return {\n    url: resultUrl,\n    bucket,\n    key,\n  };\n};\n\nexport const usePresignedUpload = () => {\n  let hook = useUploader('presigned', upload);\n  return hook;\n};\n","interface ImageData {\n  height: number | undefined;\n  width: number | undefined;\n}\n\nexport const getImageData = (file: File | Blob): Promise<ImageData> => {\n  return new Promise(resolve => {\n    if (file.type.split('/')?.[0] === 'image') {\n      let img = new Image();\n      let objectUrl = URL.createObjectURL(file);\n      img.onload = (event: Event) => {\n        let image = event.target as HTMLImageElement;\n        resolve({ height: image.height, width: image.width });\n        URL.revokeObjectURL(objectUrl);\n      };\n      img.src = objectUrl;\n    } else {\n      resolve({ height: undefined, width: undefined });\n    }\n  });\n};\n","import { getSignedUrl } from '@aws-sdk/s3-request-presigner';\nimport { GetObjectCommand } from '@aws-sdk/client-s3';\nimport { getConfig, S3Config } from './config';\nimport { getClient } from './client';\n\nexport const generateTemporaryUrl = async (\n  key: string,\n  s3Config?: S3Config\n) => {\n  let config = getConfig(s3Config);\n  let client = getClient(s3Config);\n\n  let command = new GetObjectCommand({\n    Bucket: config.bucket,\n    Key: key,\n  });\n\n  let url = await getSignedUrl(client, command, { expiresIn: 3600 });\n\n  return url;\n};\n"],"names":["getConfig","s3Config","accessKeyId","process","env","S3_UPLOAD_KEY","secretAccessKey","S3_UPLOAD_SECRET","bucket","S3_UPLOAD_BUCKET","region","S3_UPLOAD_REGION","endpoint","forcePathStyle","getClient","config","client","S3Client","credentials","uuid","uuidv4","SAFE_CHARACTERS","sanitizeKey","value","replace","makeRouteHandler","options","route","req","res","missing","missingEnvs","length","status","json","error","join","uploadType","body","_nextS3","strategy","filename","key","Promise","resolve","filetype","params","Bucket","Key","ContentType","CacheControl","getSignedUrl","PutObjectCommand","expiresIn","url","stsConfig","policy","Statement","Sid","Effect","Action","Resource","sts","STSClient","command","GetFederationTokenCommand","Name","Policy","JSON","stringify","DurationSeconds","send","token","configure","Object","assign","required","filter","APIRoute","FileInput","forwardRef","forwardedRef","onChange","restOfProps","handleChange","event","file","target","files","React","ref","type","useUploadFiles","useRef","useState","setFiles","openFileDialog","current","click","resetFiles","updateFileProgress","uploaded","map","trackedFile","size","progress","addFile","props","style","display","useUploader","uploader","oldOptions","uploadToS3","console","warn","request","getUploadParams","onProgress","result","requestOptions","additionalBody","additionalHeaders","headers","apiRouteUrl","name","fetch","method","upload","Credentials","AccessKeyId","SecretAccessKey","sessionToken","SessionToken","uploadParams","Body","s3Upload","Upload","on","loaded","done","uploadResult","useS3Upload","hook","arrayBuffer","buffer","reject","xhr","XMLHttpRequest","onprogress","open","setRequestHeader","onreadystatechange","readyState","resultUrl","usePresignedUpload","getImageData","split","img","Image","objectUrl","URL","createObjectURL","onload","image","height","width","revokeObjectURL","src","undefined","generateTemporaryUrl","GetObjectCommand"],"mappings":"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"}